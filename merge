#!/bin/bash
# Copyright (c) 2018, Redmaner

VERSION=18.04.22NL
up=$PWD/merge
git_root=$PWD

# Define bash colors for Mac OSX / Linux
case `uname -s` in
    Darwin) 
           txtrst='\033[0m' # Color off
           txtred='\033[0;31m' # Red
           txtgrn='\033[0;32m' # Green
           txtblu='\033[0;34m' # Blue
           ;;
    *)
           txtrst='\e[0m' # Color off
           txtred='\e[1;31m' # Red
           txtgrn='\e[1;32m' # Green
           txtblu='\e[1;36m' # Blue
           ;;
esac

echo -e "
#################################################
 MIUI MERGER V$VERSION
#################################################
"

# Source information
source $up/config
values=values

max_proces() {
while [ $(jobs | wc -l) -gt $max_processes ]; do
	sleep 1;
done
}


# Main event
SingleMerge () {
find $orig_dir -iname "*.apk" | sort -rh | while read apk; do
	apk_name=$(basename $apk)
	if [ -d $targ_dir/$apk_name ] && [ $(cat $blacklist | grep ''$apk_name' strings.xml' | wc -l) == 0 ]; then
		if [ -f "$orig_dir/$apk_name/res/$values/strings.xml" ] && [ -f "$targ_dir/$apk_name/res/values-$lang_iso/strings.xml" ]; then
			max_proces; ($up/merge_strings $orig_dir/$apk_name/res/$values/strings.xml $targ_dir/$apk_name/res/values-$lang_iso/strings.xml $new_dir/$apk_name/res/values-$lang_iso/strings.xml $apk_name $untranslateable_list)&
		elif [ -f "$orig_dir/$apk_name/res/$values/strings.xml" ] && [ ! -f "$targ_dir/$apk_name/res/values-$lang_iso/strings.xml" ] && [ $merge_non_exsisting == "enabled" ]; then
			max_proces; ($up/merge_strings $orig_dir/$apk_name/res/$values/strings.xml $up/dummy.xml $new_dir/$apk_name/res/values-$lang_iso/strings.xml $apk_name $untranslateable_list)&
		fi
	fi
done
wait

#find $orig_dir -iname "*.apk" | sort -rh | while read apk; do
#	apk_name=$(basename $apk)
#	if [ -d $targ_dir/$apk_name ] && [ $(cat $blacklist | grep ''$apk_name' arrays.xml' | wc -l) == 0 ]; then
#		if [ -f "$orig_dir/$apk_name/res/$values/arrays.xml" ] && [ -f "$targ_dir/$apk_name/res/values-$lang_iso/arrays.xml" ]; then
#			max_proces; ($up/merge_arrays $orig_dir/$apk_name/res/$values/arrays.xml $targ_dir/$apk_name/res/values-$lang_iso/arrays.xml $new_dir/$apk_name/res/values-$lang_iso/arrays.xml $apk_name $untranslateable_list)&
#		fi
#	fi
#done
#wait

find $orig_dir -iname "*.apk" | sort -rh | while read apk; do
	apk_name=$(basename $apk)
	if [ -d $targ_dir/$apk_name ] && [ $(cat $blacklist | grep ''$apk_name' plurals.xml' | wc -l) == 0 ]; then
		if [ -f "$orig_dir/$apk_name/res/$values/plurals.xml" ] && [ -f "$targ_dir/$apk_name/res/values-$lang_iso/plurals.xml" ]; then
			max_proces; ($up/merge_plurals $orig_dir/$apk_name/res/$values/plurals.xml $targ_dir/$apk_name/res/values-$lang_iso/plurals.xml $new_dir/$apk_name/res/values-$lang_iso/plurals.xml $apk_name $untranslateable_list)&
		fi
	fi
done
wait
}

# Main event dual merge
DualMerge () {

# Make one list of all apks in both repositories
find $orig_dir -iname "*.apk" | sort -rh | while read apk; do
	basename $apk 
done > $up/dual_merge_apk_list
find $orig_dir_second -iname "*.apk" | sort -rh | while read apk; do
	basename $apk
done >> $up/dual_merge_apk_list
cat $up/dual_merge_apk_list | sort | uniq > $up/dual_merge_apk.list && rm $up/dual_merge_apk_list

cat $up/dual_merge_apk.list | while read apk_name; do
	if [ -d $targ_dir/$apk_name ] && [ $(cat $blacklist | grep ''$apk_name' strings.xml' | wc -l) == 0 ]; then
		if [ -f "$orig_dir/$apk_name/res/$values/strings.xml" ] && [ -f "$orig_dir_second/$apk_name/res/$values/strings.xml" ] && [ -f "$targ_dir/$apk_name/res/values-$lang_iso/strings.xml" ]; then
			max_proces; ($up/merge_strings $orig_dir/$apk_name/res/$values/strings.xml $targ_dir/$apk_name/res/values-$lang_iso/strings.xml $new_dir/$apk_name/res/values-$lang_iso/strings.xml $apk_name $untranslateable_list $dual_merge $orig_dir_second/$apk_name/res/$values/strings.xml)&
		elif [ -f "$orig_dir/$apk_name/res/$values/strings.xml" ] && [ -f "$orig_dir_second/$apk_name/res/$values/strings.xml" ] && [ ! -f "$targ_dir/$apk_name/res/values-$lang_iso/strings.xml" ]; then
			max_proces; ($up/merge_strings $orig_dir/$apk_name/res/$values/strings.xml $up/dummy.xml $new_dir/$apk_name/res/values-$lang_iso/strings.xml $apk_name $untranslateable_list $dual_merge $orig_dir_second/$apk_name/res/$values/strings.xml)&
		elif [ -f "$orig_dir/$apk_name/res/$values/strings.xml" ] && [ ! -f "$orig_dir_second/$apk_name/res/$values/strings.xml" ] && [ -f "$targ_dir/$apk_name/res/values-$lang_iso/strings.xml" ]; then
			max_proces; ($up/merge_strings $orig_dir/$apk_name/res/$values/strings.xml $targ_dir/$apk_name/res/values-$lang_iso/strings.xml $new_dir/$apk_name/res/values-$lang_iso/strings.xml $apk_name $untranslateable_list false)&
		elif [ -f "$orig_dir/$apk_name/res/$values/strings.xml" ] && [ ! -f "$orig_dir_second/$apk_name/res/$values/strings.xml" ] && [ ! -f "$targ_dir/$apk_name/res/values-$lang_iso/strings.xml" ]; then
			max_proces; ($up/merge_strings $orig_dir/$apk_name/res/$values/strings.xml $up/dummy.xml $new_dir/$apk_name/res/values-$lang_iso/strings.xml $apk_name $untranslateable_list false)&
		elif [ ! -f "$orig_dir/$apk_name/res/$values/strings.xml" ] && [ -f "$orig_dir_second/$apk_name/res/$values/strings.xml" ] && [ -f "$targ_dir/$apk_name/res/values-$lang_iso/strings.xml" ]; then
			max_proces; ($up/merge_strings $orig_dir_second/$apk_name/res/$values/strings.xml $targ_dir/$apk_name/res/values-$lang_iso/strings.xml $new_dir/$apk_name/res/values-$lang_iso/strings.xml $apk_name $untranslateable_list false)&
		elif [ ! -f "$orig_dir/$apk_name/res/$values/strings.xml" ] && [ -f "$orig_dir_second/$apk_name/res/$values/strings.xml" ] && [ ! -f "$targ_dir/$apk_name/res/values-$lang_iso/strings.xml" ]; then
			max_proces; ($up/merge_strings $orig_dir_second/$apk_name/res/$values/strings.xml $up/dummy.xml $new_dir/$apk_name/res/values-$lang_iso/strings.xml $apk_name $untranslateable_list false)&
		fi
	fi
done
wait

#cat $up/dual_merge_apk.list | while read apk_name; do
#	if [ -d $targ_dir/$apk_name ] && [ $(cat $blacklist | grep ''$apk_name' arrays.xml' | wc -l) == 0 ]; then
#		if [ -f "$orig_dir/$apk_name/res/$values/arrays.xml" ] && [ -f "$orig_dir_second/$apk_name/res/$values/arrays.xml" ] && [ -f "$targ_dir/$apk_name/res/values-$lang_iso/arrays.xml" ]; then
#			max_proces; ($up/merge_arrays $orig_dir/$apk_name/res/$values/arrays.xml $targ_dir/$apk_name/res/values-$lang_iso/arrays.xml $new_dir/$apk_name/res/values-$lang_iso/arrays.xml $apk_name $untranslateable_list $dual_merge $orig_dir_second/$apk_name/res/$values/arrays.xml)&
#		elif [ -f "$orig_dir/$apk_name/res/$values/arrays.xml" ] && [ -f "$orig_dir_second/$apk_name/res/$values/arrays.xml" ] && [ ! -f "$targ_dir/$apk_name/res/values-$lang_iso/arrays.xml" ]; then
#			max_proces; ($up/merge_arrays $orig_dir/$apk_name/res/$values/arrays.xml $up/dummy.xml $new_dir/$apk_name/res/values-$lang_iso/arrays.xml $apk_name $untranslateable_list $dual_merge $orig_dir_second/$apk_name/res/$values/arrays.xml)&
#		elif [ -f "$orig_dir/$apk_name/res/$values/arrays.xml" ] && [ ! -f "$orig_dir_second/$apk_name/res/$values/arrays.xml" ] && [ -f "$targ_dir/$apk_name/res/values-$lang_iso/arrays.xml" ]; then
#			max_proces; ($up/merge_arrays $orig_dir/$apk_name/res/$values/arrays.xml $targ_dir/$apk_name/res/values-$lang_iso/arrays.xml $new_dir/$apk_name/res/values-$lang_iso/arrays.xml $apk_name $untranslateable_list false)&
#		elif [ -f "$orig_dir/$apk_name/res/$values/arrays.xml" ] && [ ! -f "$orig_dir_second/$apk_name/res/$values/arrays.xml" ] && [ ! -f "$targ_dir/$apk_name/res/values-$lang_iso/arrays.xml" ]; then
#			max_proces; ($up/merge_arrays $orig_dir/$apk_name/res/$values/arrays.xml $up/dummy.xml $new_dir/$apk_name/res/values-$lang_iso/arrays.xml $apk_name $untranslateable_list false)&
#		elif [ ! -f "$orig_dir/$apk_name/res/$values/arrays.xml" ] && [ -f "$orig_dir_second/$apk_name/res/$values/arrays.xml" ] && [ -f "$targ_dir/$apk_name/res/values-$lang_iso/arrays.xml" ]; then
#			max_proces; ($up/merge_arrays $orig_dir_second/$apk_name/res/$values/arrays.xml $targ_dir/$apk_name/res/values-$lang_iso/arrays.xml $new_dir/$apk_name/res/values-$lang_iso/arrays.xml $apk_name $untranslateable_list false)&
#		elif [ ! -f "$orig_dir/$apk_name/res/$values/arrays.xml" ] && [ -f "$orig_dir_second/$apk_name/res/$values/arrays.xml" ] && [ ! -f "$targ_dir/$apk_name/res/values-$lang_iso/arrays.xml" ]; then
#			max_proces; ($up/merge_arrays $orig_dir_second/$apk_name/res/$values/arrays.xml $up/dummy.xml $new_dir/$apk_name/res/values-$lang_iso/arrays.xml $apk_name $untranslateable_list false)&
#		fi
#	fi
#done
#wait

cat $up/dual_merge_apk.list | while read apk_name; do
	if [ -d $targ_dir/$apk_name ] && [ $(cat $blacklist | grep ''$apk_name' plurals.xml' | wc -l) == 0 ]; then
		if [ -f "$orig_dir/$apk_name/res/$values/plurals.xml" ] && [ -f "$orig_dir_second/$apk_name/res/$values/plurals.xml" ] && [ -f "$targ_dir/$apk_name/res/values-$lang_iso/plurals.xml" ]; then
			max_proces; ($up/merge_plurals $orig_dir/$apk_name/res/$values/plurals.xml $targ_dir/$apk_name/res/values-$lang_iso/plurals.xml $new_dir/$apk_name/res/values-$lang_iso/plurals.xml $apk_name $untranslateable_list $dual_merge $orig_dir_second/$apk_name/res/$values/plurals.xml)&
		elif [ -f "$orig_dir/$apk_name/res/$values/plurals.xml" ] && [ -f "$orig_dir_second/$apk_name/res/$values/plurals.xml" ] && [ ! -f "$targ_dir/$apk_name/res/values-$lang_iso/plurals.xml" ]; then
			max_proces; ($up/merge_plurals $orig_dir/$apk_name/res/$values/plurals.xml $up/dummy.xml $new_dir/$apk_name/res/values-$lang_iso/plurals.xml $apk_name $untranslateable_list $dual_merge $orig_dir_second/$apk_name/res/$values/plurals.xml)&
		elif [ -f "$orig_dir/$apk_name/res/$values/plurals.xml" ] && [ ! -f "$orig_dir_second/$apk_name/res/$values/plurals.xml" ] && [ -f "$targ_dir/$apk_name/res/values-$lang_iso/plurals.xml" ]; then
			max_proces; ($up/merge_plurals $orig_dir/$apk_name/res/$values/plurals.xml $targ_dir/$apk_name/res/values-$lang_iso/plurals.xml $new_dir/$apk_name/res/values-$lang_iso/plurals.xml $apk_name $untranslateable_list false)&
		elif [ -f "$orig_dir/$apk_name/res/$values/plurals.xml" ] && [ ! -f "$orig_dir_second/$apk_name/res/$values/plurals.xml" ] && [ ! -f "$targ_dir/$apk_name/res/values-$lang_iso/plurals.xml" ]; then
			max_proces; ($up/merge_plurals $orig_dir/$apk_name/res/$values/plurals.xml $up/dummy.xml $new_dir/$apk_name/res/values-$lang_iso/plurals.xml $apk_name $untranslateable_list false)&
		elif [ ! -f "$orig_dir/$apk_name/res/$values/plurals.xml" ] && [ -f "$orig_dir_second/$apk_name/res/$values/plurals.xml" ] && [ -f "$targ_dir/$apk_name/res/values-$lang_iso/plurals.xml" ]; then
			max_proces; ($up/merge_plurals $orig_dir_second/$apk_name/res/$values/plurals.xml $targ_dir/$apk_name/res/values-$lang_iso/plurals.xml $new_dir/$apk_name/res/values-$lang_iso/plurals.xml $apk_name $untranslateable_list false)&
		elif [ ! -f "$orig_dir/$apk_name/res/$values/plurals.xml" ] && [ -f "$orig_dir_second/$apk_name/res/$values/plurals.xml" ] && [ ! -f "$targ_dir/$apk_name/res/values-$lang_iso/plurals.xml" ]; then
			max_proces; ($up/merge_plurals $orig_dir_second/$apk_name/res/$values/plurals.xml $up/dummy.xml $new_dir/$apk_name/res/values-$lang_iso/plurals.xml $apk_name $untranslateable_list false)&
		fi
	fi
done
wait
}

# Single or dual merge
if [ $dual_merge == true ]; then
	DualMerge
else
	SingleMerge
fi

wait; sleep 60
if [ $post_clean == "enabled" ]; then
	source $up/post_clean
fi

$python $up/sort.py $new_dir > /dev/null
